{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name readnext.motion, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {in-ellipse {:protocol-inline nil, :meta {:file "C:\\Users\\Kobayashi\\Desktop\\readnext\\src\\readnext\\motion.cljs", :line 2, :column 7, :end-line 2, :end-column 17, :arglists (quote ([{ellipse-x :x, ellipse-y :y} {cur-x :x, cur-y :y} radius]))}, :name readnext.motion/in-ellipse, :variadic false, :file "src\\readnext\\motion.cljs", :end-column 17, :method-params ([p__10040 p__10041 radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2, :end-line 2, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{ellipse-x :x, ellipse-y :y} {cur-x :x, cur-y :y} radius]))}, move {:protocol-inline nil, :meta {:file "C:\\Users\\Kobayashi\\Desktop\\readnext\\src\\readnext\\motion.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([{ellipse-x :x, ellipse-y :y, :as ellipse-pos} {cur-x :x, cur-y :y, :as current-pos} radius speed]))}, :name readnext.motion/move, :variadic false, :file "src\\readnext\\motion.cljs", :end-column 11, :method-params ([p__10046 p__10047 radius speed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([{ellipse-x :x, ellipse-y :y, :as ellipse-pos} {cur-x :x, cur-y :y, :as current-pos} radius speed]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:y :x}, :order [:x :y]}, :doc nil}